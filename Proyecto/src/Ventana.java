
import java.io.File;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author R2D2
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        cantDatos = new javax.swing.JLabel();
        cantInterv = new javax.swing.JLabel();
        Amplitud = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        range = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Archivo");

        jButton1.setText("Abrir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cantDatos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cantDatos.setText("n :");

        cantInterv.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cantInterv.setText("m :");

        Amplitud.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Amplitud.setText("C :");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Y'i-1", "Y'i", "Yi", "ni", "hi", "Ni", "Hi"
            }
        ));
        jTable1.setEnabled(false);
        jScrollPane1.setViewportView(jTable1);

        range.setText("Rango: ");

        jButton2.setText("Calcular Varianza");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cantDatos)
                            .addComponent(Amplitud)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cantInterv)
                                .addGap(198, 198, 198)
                                .addComponent(range))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addGap(121, 121, 121)
                                .addComponent(jButton2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(40, 40, 40)
                .addComponent(cantDatos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cantInterv)
                    .addComponent(range))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Amplitud)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            obtenerDatos();
            definirParametros();
            generarTabla();
            jTable1.enable();
            //Estadistica.getFrecuenciaR(datos, )
        } catch (Exception ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, ex, "Ha ocurrido un error", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jTable1.getModel().getRowCount() > 0) {
            VarianzaV = new Varianza(this);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Ventana v=new Ventana();
                v.setVisible(true);
            }
        });
    }
    private javax.swing.JFileChooser buscador;
    private File archivo;
    private Convertidor convertidor;
    private ArrayList<Double> datos, clase;
    private ArrayList<Integer> fRel;
    private int n, m;
    private double c, rUp, rDown;
    private Varianza VarianzaV;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Amplitud;
    private javax.swing.JLabel cantDatos;
    private javax.swing.JLabel cantInterv;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel range;
    // End of variables declaration//GEN-END:variables

    private ArrayList<Double> obtenerDatos() throws Exception {
        try {
            //Buscar el archivo y convertir sus datos en un arreglo numerico
            buscador = new JFileChooser();
            buscador.showOpenDialog(null);
            archivo = buscador.getSelectedFile();
            convertidor = new Convertidor(archivo);
            datos = convertidor.getDatos();

            return datos;
        } catch (Exception ex) {
            throw new Exception("No se pudo acceder al archivo o no existe");
        }
    }

    private void definirParametros() {
        String s;
        //Obtener la cantidad de datos y mostrarla en la GUI
        n = datos.size();
        s = "n : " + n;
        cantDatos.setText(s);

        //Definir la cantidad de intervalos que se utilizaran 
        s = "m : " + Convertidor.round(Estadistica.getIntervalos(n));
        m = Estadistica.getM();
        s += " -> " + m;
        cantInterv.setText(s); //mostrar la cant. intervalos en la GUI

        //obtener el rango de los datos por si no estan ordenados
        rUp = Estadistica.getMax(datos);
        rDown = Estadistica.getMin(datos);
        s = "Rango:  " + rDown + " - " + rUp;
        range.setText(s); //Mostratlo en la GUI

        //obtener valor de amplitud(C)
        c = Estadistica.getAmplitud(rDown, rUp);
        s = "C : " + c;
        Amplitud.setText(s);

    }

    private void generarTabla() {
        DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
        if (tabla.getRowCount() > 0) {
            int m = tabla.getRowCount();
            for (int i = 0; i < m; i++) {
                tabla.removeRow(0);
            }
        }
        double tmp, tmp2, fa, fat;
        int fr, frt;
        clase = new ArrayList<Double>();
        fRel = new ArrayList<Integer>();
        //inicializacion de las variables
        Vector v = new Vector();
        frt = 0;
        fat = 0;
        tmp = rDown;
        tmp2 = tmp + c;
        fr = Estadistica.GetFRelativa(tmp, tmp2, datos);
        fa = Estadistica.getFAbsoluta(tmp, tmp2, datos);
        frt += fr;
        fat += fa;
        //primer fila de datos
        v.add(tmp);
        v.add(tmp2);
        v.add((tmp + tmp2) / 2);
        clase.add((tmp + tmp2) / 2);
        v.add(fr);
        fRel.add(fr);
        v.add(fa);
        v.add(frt);
        v.add(fat);
        tabla.addRow(v);
        //el resto de filas
        for (int i = 0; i < m - 1; i++) {
            v = new Vector();
            tmp += c;
            tmp2 += c;
            fr = Estadistica.GetFRelativa(tmp, tmp2, datos);
            fa = Estadistica.getFAbsoluta(tmp, tmp2, datos);
            frt += fr;
            fat += fa;
            v.add(tmp);
            v.add(tmp2);
            v.add((tmp + tmp2) / 2);
            clase.add((tmp + tmp2) / 2);
            v.add(fr);
            fRel.add(fr);
            v.add(fa);
            v.add(frt);
            v.add(fat);
            tabla.addRow(v);
        }
        v = new Vector();
        v.add("-");
        v.add("-");
        v.add("-");
        v.add(frt);
        v.add(fat);
        v.add("-");
        v.add("-");
        tabla.addRow(v);
        //asignacion del modelo de la tabla a la tabla de la GUI
        jTable1.setModel(tabla);
    }
    
    public ArrayList<Double> getYClase(){
        return clase;
    }
    
    public ArrayList<Integer> getNi(){
        return fRel;
    }
}
